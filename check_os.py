from ray_optics_criteria_ITMO import calc_loss
import time


class Run:
    def __init__(self):
        self.best_loss = float('inf')

    def main(self, *args, **kwargs):
        t0 = time.time()
        path2model = 'test.roa'  # insert the path to ray-optics model, for example 'C:/test.roa'
        print(args, kwargs)
        if args:
            args = list(args[0])
            l_value = [0, 4, 6, 10, 12]
            kwargs = {f'l{1 + x}': args[l_value[x]: l_value[x + 1]] for x in range(len(l_value) - 1)}
            args = args[12:]
            kwargs.update({f'l{1 + x}_coefs': args[x * 8: (x + 1) * 8] for x in range(len(args) // 8)})
            args = ()
        loss = calc_loss(path2model, *args, **kwargs)
        if loss < self.best_loss:
            self.best_loss = loss
            with open('best_2.txt', 'a') as file:
                file.write(f'{loss=}, best_param={kwargs} \n')
        elapsed_time = time.time() - t0
        print(f'{loss=}, {elapsed_time=} sec')
        return loss


if __name__ == '__main__':
    run = Run()
    # best_param = {'l1': [0.2791158099269407, 1.0037479911346872, 1.5261812896231235, 75.00008653474656],
    #               'l2': [0.14207869840075518, 0.5096391331756961],
    #               'l3': [-0.05626882503338093, 1.0030754980529646, 1.6777742569666922, 39.00015787264238],
    #               'l4': [-0.2563566127076245, 4.216404623070566],
    #               'l1_coefs': [0.012868466936135371, 0.005063302914189549, -0.03414342498052082, 0.027768776932613096,
    #                            -0.010775548959399424, -0.008060620851500088, 0.009012318437796152,
    #                            -0.0024075426547856284],
    #               'l2_coefs': [0.0112679970210799, -0.014238612981715795, -0.03185377276780764, 0.0015606715704450064,
    #                            0.005005532685212877, -0.003771280956461448, 0.0010002353156377192,
    #                            -9.240401608152898e-05],
    #               'l3_coefs': [-0.002048763086163696, -0.0220739165445026, 0.004594937414782493, -0.01878687077411235,
    #                            0.009011927520039275, -0.0004573985435062217, -0.001679688857711538,
    #                            0.00048263606187476426]}
    best_param = {'l1': [0.2748833719143843, 1.0000426551559747, 1.5400536563587917, 75.0000006115709],
                  'l2': [0.13562639427227538, 0.5000832333974555],
                  'l3': [-0.055487834734835234, 1.0000362178276698, 1.6698991090037367, 39.00000157579341],
                  'l4': [-0.25678114900969545, 4.216380727841776],
                  'l1_coefs': [0.0002107929188186091, 0.008979742430281362, -0.034120663863673475, 0.01749965258229512,
                               -0.005347733167760886, -1.4538037215333492e-05, 0.000239519137601301, 6.581870383803263e-06],
                  'l2_coefs': [0.00014171556904731534, -0.00437090550501195, -0.03455044161723425, 0.004157409043325088,
                               0.0002714730930191466, 0.0006626970748861976, 0.0005360426292600974, -0.0002629234307798963],
                  'l3_coefs': [-0.0005596840106054154, -0.021667138624198702, 0.01271243560877558, -0.017643014462330398,
                               0.0040058706012251425, 4.076165241534607e-05, 0.00042422299726083975, 0.0010878087507886925],
                  'l4_coefs': [0.0002340187438723439, -0.00037289446899150256, -0.00016258015978397658, 0.00010820979155398325,
                               0.0003629318993145684, 0.0005579086378675218, 0.0005542867307349592, 1.4108760167032285e-05]}
    run.main(**best_param)
